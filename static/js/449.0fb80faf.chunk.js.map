{"version":3,"file":"static/js/449.0fb80faf.chunk.js","mappings":"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","sources":["components/FavoriteMedia/FavItemContent.js","components/FavoriteMedia/ConfirmModal.js","components/FavoriteMedia/FavoriteItem.js","components/FavoriteMedia/FavoriteList.js","pages/Favorites.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport Rating from \"../UI/Rating\";\nimport MiniButton from \"../UI/Buttons/MiniButton\";\nimport Spinner from \"../../components/UI/Loaders/Spinner\";\nimport { FaTrash } from \"react-icons/fa\";\n\nconst FavItemContent = ({ item, onOpenModal, loading }) => {\n  const releaseDate = item.release_date ? item.release_date.slice(0, 4) : null;\n\n  return (\n    <>\n      <div className=\"content\">\n        <Link\n          to={`/${item.media_type}/${item.id}?details=cast`}\n          className=\"title_link\"\n        >\n          <h3>{item.title || item.name}</h3>\n        </Link>\n        <p className=\"description\">{item.overview}</p>\n        <div className=\"info\">\n          {item.release_date && <span>{releaseDate}</span>}\n          <Rating rating={item.vote_average} />\n        </div>\n      </div>\n      <MiniButton onClick={onOpenModal}>\n        {!loading && <FaTrash />}\n        {loading && <Spinner />}\n      </MiniButton>\n    </>\n  );\n};\n\nexport default FavItemContent;\n","import Modal from \"../UI/Modal/Modal\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Buttons/Button\";\nimport Spinner from \"../UI/Loaders/Spinner\";\nimport { FaExclamation } from \"react-icons/fa\";\n\nconst ConfirmModal = (props) => {\n  return (\n    <Modal onCloseModal={props.onCloseConfirm}>\n      <Card>\n        <div className=\"confirm_content\">\n          <div className=\"icon\">\n            <FaExclamation fontSize=\"2rem\" />\n          </div>\n          <p className=\"message\">{props.massage}</p>\n          <Button onClick={props.onRemove}>\n            {!props.loading && props.btnLabel}\n            {props.loading && <Spinner />}\n          </Button>\n        </div>\n      </Card>\n    </Modal>\n  );\n};\n\nexport default ConfirmModal;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport FavItemContent from \"./FavItemContent\";\nimport ConfirmModal from \"./ConfirmModal\";\nimport { REMOVE_FAV_ITEM } from \"../../store/slices/favoriteMovies-slice\";\nimport { toast } from \"react-toastify\";\n//? Firebase\nimport { remove, child } from \"firebase/database\";\nimport { dbRef } from \"../../firebase/config\";\nimport { apiConfig } from \"../../api/api-config\";\nconst { baseImageUrl } = apiConfig;\n//==========================================================================\nconst FavoriteItem = ({ item }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmIsOpen, setConfirmIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const openConfirmHandler = () => setConfirmIsOpen(true);\n  const closeConfirmHandler = () => setConfirmIsOpen(false);\n\n  const removeItemHandler = async () => {\n    setIsLoading(true);\n    await remove(child(dbRef, `favorites/${item.firebaseId}`))\n      .then(() => {\n        dispatch(REMOVE_FAV_ITEM(item.id));\n        toast.success(\n          `${item.title || item.name} removed successfully from favorites`,\n          {\n            position: \"top-center\",\n            autoClose: 3000,\n            theme: \"dark\",\n          }\n        );\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n\n    setIsLoading(false);\n  };\n\n  const imageUrl = `${baseImageUrl}${item.poster_path}`;\n  const posterImage = { backgroundImage: `url(${imageUrl})` };\n  const confirmMsg = `are you sure you want remove ${\n    item.title || item.name\n  } from favorites?`;\n\n  return (\n    <>\n      <li className=\"favorite_item\">\n        <Link\n          to={`/${item.media_type}/${item.id}?details=cast`}\n          className=\"card_link\"\n        >\n          <div className=\"card_img\" style={posterImage} />\n        </Link>\n        <FavItemContent item={item} onOpenModal={openConfirmHandler} />\n      </li>\n      {confirmIsOpen && (\n        <ConfirmModal\n          massage={confirmMsg}\n          btnLabel=\"remove\"\n          loading={isLoading}\n          onCloseConfirm={closeConfirmHandler}\n          onRemove={removeItemHandler}\n        />\n      )}\n    </>\n  );\n};\n\nexport default FavoriteItem;\n","import FavoriteItem from \"./FavoriteItem\";\n\nconst FavoriteList = ({ favoriteList }) => {\n  if (favoriteList.length > 0) {\n    return (\n      <ul className=\"favorite_list\">\n        {favoriteList.map((item) => (\n          <FavoriteItem key={item.id} item={item} />\n        ))}\n      </ul>\n    );\n  } else {\n    return <h2 className=\"text-center\">there are no items</h2>;\n  }\n};\n\nexport default FavoriteList;\n","import { useNavigation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectFavoriteMedia } from \"../store/slices/favoriteMovies-slice\";\nimport Container from \"../components/UI/Layouts/Container\";\nimport SectionTitle from \"../components/UI/SectionTitle\";\nimport FavoriteList from \"../components/FavoriteMedia/FavoriteList\";\nimport Loading from \"../components/UI/Loaders/Loading\";\n\nconst FavoritesPage = () => {\n  const { items } = useSelector(selectFavoriteMedia);\n  const navigation = useNavigation();\n  const isLoading = navigation.state === \"loading\";\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      <section className=\"favorite_media\">\n        <Container>\n          <SectionTitle title=\"favorite media\" />\n          <FavoriteList favoriteList={items} />\n        </Container>\n      </section>\n    </>\n  );\n};\n\nexport default FavoritesPage;\n"],"names":["_ref","item","onOpenModal","loading","releaseDate","release_date","slice","_jsxs","_Fragment","children","className","_jsx","Link","to","concat","media_type","id","title","name","overview","Rating","rating","vote_average","MiniButton","onClick","FaTrash","Spinner","props","Modal","onCloseModal","onCloseConfirm","Card","FaExclamation","fontSize","massage","Button","onRemove","btnLabel","baseImageUrl","apiConfig","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","confirmIsOpen","setConfirmIsOpen","dispatch","useDispatch","removeItemHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","remove","child","dbRef","firebaseId","then","REMOVE_FAV_ITEM","toast","position","autoClose","theme","catch","error","stop","apply","arguments","imageUrl","poster_path","posterImage","backgroundImage","confirmMsg","style","FavItemContent","ConfirmModal","favoriteList","length","map","FavoriteItem","items","useSelector","selectFavoriteMedia","useNavigation","state","Loading","Container","SectionTitle","FavoriteList"],"sourceRoot":""}