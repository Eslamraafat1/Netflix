{"version":3,"file":"static/js/883.135caa05.chunk.js","mappings":"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","sources":["components/MovieDetails/CastList/Actor.js","components/UI/Layouts/GridLayout.js","components/UI/Pagination.js","context/search-reducer.js","context/search-context.js","context/SearchProvider.js","components/Search/SearchTabs.js","components/Search/SearchInput.js","components/Search/SearchResults.js","components/Search/SearchRoot.js","pages/Search.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { apiConfig } from \"../../../api/api-config\";\n\nconst Actor = ({ actor }) => {\n  const actorStyle = {\n    backgroundImage: `url(${apiConfig.baseImageUrl}${actor.profile_path})`,\n  };\n\n  return (\n    <Link\n      to={`/person/${actor.id}`}\n      className=\"actor card_img\"\n      style={actorStyle}\n    >\n      <div className=\"name\">\n        <h5>{actor.name}</h5>\n      </div>\n    </Link>\n  );\n};\n\nexport default Actor;\n","const GridLayout = ({ children }) => {\n  return <div className=\"grid_layout\">{children}</div>;\n};\n\nexport default GridLayout;\n","import ReactPaginate from \"react-paginate\";\nimport { BiChevronsLeft, BiChevronsRight } from \"react-icons/bi\";\n\nconst Pagination = (props) => {\n  return (\n    <div className=\"pagination_container\">\n      <ReactPaginate\n        previousLabel={<BiChevronsLeft fontSize=\"20px\" />}\n        nextLabel={<BiChevronsRight fontSize=\"20px\" />}\n        breakLabel=\"...\"\n        pageCount={props.pageCount}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={1}\n        containerClassName=\"pagination\"\n        onPageChange={props.onPageChange}\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakClassName=\"page-item break\"\n        breakLinkClassName=\"page-link\"\n        ariaLabelBuilder={props.currentPage}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n","const initialSearchState = {\n  searchData: null,\n  searchValue: \"\",\n  searchCategory: \"movie\",\n  isLoading: false,\n  hasError: false,\n};\n\nconst searchReducer = (state = initialSearchState, action) => {\n  if (action.type === \"UPDATE_SEARCH_VALUE\") {\n    return {\n      ...state,\n      searchValue: action.searchValue,\n    };\n  }\n\n  if (action.type === \"UPDATE_CATEGORY\") {\n    return {\n      ...state,\n      searchCategory: action.category,\n    };\n  }\n\n  if (action.type === \"UPDATE_DATA\") {\n    return {\n      ...state,\n      searchData: action.data,\n    };\n  }\n\n  return state;\n};\n\nexport { initialSearchState, searchReducer };\n","import React from \"react\";\n\nconst SearchContext = React.createContext();\n\nexport default SearchContext;\n","import { useReducer, useCallback, useMemo } from \"react\";\nimport { initialSearchState, searchReducer } from \"./search-reducer\";\nimport SearchContext from \"./search-context\";\n\nconst SearchProvider = ({ children }) => {\n  const [searchState, dispatch] = useReducer(searchReducer, initialSearchState);\n\n  // Update Search Value\n  const updateSearchValue = useCallback((value) => {\n    dispatch({ type: \"UPDATE_SEARCH_VALUE\", searchValue: value });\n  }, []);\n\n  // Update Search Category\n  const updateSearchCategory = useCallback((cat) => {\n    dispatch({ type: \"UPDATE_CATEGORY\", category: cat });\n  }, []);\n\n  // Update Search Data\n  const updateSearchData = useCallback((data) => {\n    dispatch({ type: \"UPDATE_DATA\", data: data });\n  }, []);\n\n  // Save Search Data\n  const searchData = useMemo(\n    () => searchState.searchData,\n    [searchState.searchData]\n  );\n\n  const searchContext = {\n    searchData: searchData,\n    searchValue: searchState.searchValue,\n    searchCategory: searchState.searchCategory,\n    updateSearchValue,\n    updateSearchCategory,\n    updateSearchData,\n  };\n\n  return (\n    <SearchContext.Provider value={searchContext}>\n      {children}\n    </SearchContext.Provider>\n  );\n};\n\nexport default SearchProvider;\n","import React, { useState } from \"react\";\nimport { apiConfig } from \"../../api/api-config\";\n\nconst tabsList = [\"movie\", \"tv\", \"actors\"];\n//================================================================\nconst SearchTabs = (props) => {\n  const [currIndex, setCurrIndex] = useState(0);\n  const { searchValue, onUpdateSearchCategory, onUpdateSearchData } = props;\n\n  // Switch Active Tab\n  const switchActiveTab = async (cat, tabIndex) => {\n    setCurrIndex(tabIndex);\n    onUpdateSearchCategory(cat);\n\n    if (!searchValue) {\n      return;\n    }\n\n    const category = cat === \"actors\" ? \"person\" : cat;\n\n    try {\n      const res = await fetch(\n        `${apiConfig.base_url}/search/${category}?api_key=${apiConfig.API_KEY}&query=${searchValue}`\n      );\n\n      if (res.status !== 200) {\n        throw new Error(\"error\");\n      }\n\n      const data = await res.json();\n      // Updated Results\n      const updatedResults = data.results.map((item) => {\n        return { ...item, media_type: category };\n      });\n\n      onUpdateSearchData({ ...data, results: updatedResults });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"search_tabs\">\n      <ul className=\"tabs_list\">\n        {tabsList.map((tab, tabIndex) => (\n          <li key={tab}>\n            <button\n              type=\"button\"\n              className={`tab_btn ${tabIndex === currIndex ? \"active\" : \"\"}`}\n              onClick={() => switchActiveTab(tab, tabIndex)}\n            >\n              {tab}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default React.memo(SearchTabs);\n","import React from \"react\";\nimport { useHttp } from \"../../hooks/use-http\";\nimport { apiConfig } from \"../../api/api-config\";\n\nconst SearchInput = (props) => {\n  const { searchCategory, onUpdateSearchValue, onUpdateSearchData } = props;\n  const { sendRequest: fetchSearchData } = useHttp();\n\n  const updateSearchData = (category, data) => {\n    const updatedResults = data.results.map((item) => {\n      return { ...item, media_type: category };\n    });\n\n    onUpdateSearchData({ ...data, results: updatedResults });\n  };\n\n  const changeHandler = async (e) => {\n    const { value } = e.target;\n    onUpdateSearchValue(value);\n\n    if (!value) {\n      onUpdateSearchData(null);\n      return;\n    }\n\n    const category = searchCategory === \"actors\" ? \"person\" : searchCategory;\n\n    fetchSearchData(\n      {\n        url: `${apiConfig.base_url}/search/${category}?api_key=${apiConfig.API_KEY}&query=${value}`,\n      },\n      updateSearchData.bind(null, category)\n    );\n  };\n\n  return (\n    <div className=\"search_input\">\n      <input\n        type=\"text\"\n        name=\"search-input\"\n        placeholder=\"Search in ScreenX\"\n        onChange={changeHandler}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(SearchInput);\n","import React from \"react\";\nimport Container from \"../UI/Layouts/Container\";\nimport GridLayout from \"../UI/Layouts/GridLayout\";\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport Actor from \"../MovieDetails/CastList/Actor\";\nimport Pagination from \"../UI/Pagination\";\nimport { apiConfig } from \"../../api/api-config\";\n//==================================================================\nconst SearchResults = (props) => {\n  const { data, category, value, onUpdateSearchData } = props;\n\n  let results;\n\n  if (data.results.length > 0) {\n    results = (\n      <GridLayout>\n        {data.results.map((item) => {\n          if (item.media_type === \"person\") {\n            return <Actor key={item.id} actor={item} />;\n          }\n\n          return <MovieCard key={item.id} movie={item} />;\n        })}\n      </GridLayout>\n    );\n  } else {\n    results = <h2 className=\"text-center\">no results found!</h2>;\n  }\n\n  const pageChangeHandler = async (page) => {\n    const pageNumber = page.selected + 1;\n\n    const searchCategory = category === \"actors\" ? \"person\" : category;\n\n    const res = await fetch(\n      `${apiConfig.base_url}/search/${searchCategory}?api_key=${apiConfig.API_KEY}&query=${value}&page=${pageNumber}`\n    );\n\n    if (res.status !== 200) {\n      throw new Error(\"error\");\n    }\n\n    const data = await res.json();\n    // Updated Results\n    const updatedResults = data.results.map((item) => {\n      return {\n        ...item,\n        media_type: searchCategory,\n      };\n    });\n\n    onUpdateSearchData({ ...data, results: updatedResults });\n\n    try {\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <section className=\"search_results\">\n      <Container>{results}</Container>\n      {data.results.length > 0 && (\n        <Pagination\n          pageCount={data.total_pages}\n          onPageChange={pageChangeHandler}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default React.memo(SearchResults);\n","import { useContext } from \"react\";\nimport SearchContext from \"../../context/search-context\";\nimport Container from \"../UI/Layouts/Container\";\nimport SearchTabs from \"./SearchTabs\";\nimport SearchInput from \"./SearchInput\";\nimport SearchResults from \"./SearchResults\";\n//===============================================================\nconst SearchRoot = () => {\n  const {\n    searchData,\n    searchValue,\n    searchCategory,\n    updateSearchValue,\n    updateSearchCategory,\n    updateSearchData,\n  } = useContext(SearchContext);\n\n  return (\n    <>\n      <section className=\"search_wrapper\">\n        <Container>\n          <SearchTabs\n            searchValue={searchValue}\n            onUpdateSearchCategory={updateSearchCategory}\n            onUpdateSearchData={updateSearchData}\n          />\n          <SearchInput\n            searchCategory={searchCategory}\n            onUpdateSearchValue={updateSearchValue}\n            onUpdateSearchData={updateSearchData}\n          />\n        </Container>\n      </section>\n      {searchData && (\n        <SearchResults\n          data={searchData}\n          category={searchCategory}\n          value={searchValue}\n          onUpdateSearchData={updateSearchData}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SearchRoot;\n","import { useNavigation } from \"react-router-dom\";\nimport SearchProvider from \"../context/SearchProvider\";\nimport SearchRoot from \"../components/Search/SearchRoot\";\nimport Loading from \"../components/UI/Loaders/Loading\";\n//===============================================================\nconst SearchPage = () => {\n  const navigation = useNavigation();\n  const isLoading = navigation.state === \"loading\";\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      <SearchProvider>\n        <SearchRoot />\n      </SearchProvider>\n    </>\n  );\n};\n\nexport default SearchPage;\n"],"names":["_ref","actor","actorStyle","backgroundImage","concat","apiConfig","profile_path","_jsx","Link","to","id","className","style","children","name","props","ReactPaginate","previousLabel","BiChevronsLeft","fontSize","nextLabel","BiChevronsRight","breakLabel","pageCount","pageRangeDisplayed","marginPagesDisplayed","containerClassName","onPageChange","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","ariaLabelBuilder","currentPage","initialSearchState","searchData","searchValue","searchCategory","isLoading","hasError","searchReducer","state","arguments","length","undefined","action","type","_objectSpread","category","data","React","_useReducer","useReducer","_useReducer2","_slicedToArray","searchState","dispatch","updateSearchValue","useCallback","value","updateSearchCategory","cat","updateSearchData","searchContext","useMemo","SearchContext","tabsList","SearchTabs","_useState","useState","_useState2","currIndex","setCurrIndex","onUpdateSearchCategory","onUpdateSearchData","switchActiveTab","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tabIndex","res","updatedResults","wrap","_context","prev","next","abrupt","fetch","sent","status","Error","json","results","map","item","media_type","t0","console","log","stop","_x","_x2","apply","tab","onClick","SearchInput","onUpdateSearchValue","fetchSearchData","useHttp","sendRequest","changeHandler","e","target","url","bind","placeholder","onChange","SearchResults","GridLayout","Actor","MovieCard","movie","pageChangeHandler","page","pageNumber","selected","_jsxs","Container","Pagination","total_pages","_useContext","useContext","_Fragment","useNavigation","Loading","SearchProvider","SearchRoot"],"sourceRoot":""}